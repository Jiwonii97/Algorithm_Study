# 코딩테스트 연습 / 월간 코드 챌린지 시즌1 / 쿼드압축 후 개수 세기
# 재귀 구현 문제, 재귀의 방법으로 푸는 문제, 일일이 확인하다가 조건에 맞지 않으면 해당 내용을 진행하는 방식으로 사용(재귀적으로 계속 확인해 나가니 함수화 시킴)

def solution(arr):
    answer = [0, 0]     # [0의 개수, 1의 개수]

    # 내장 함수처럼 사용 가능
    def comp(x, y, n):
        init = arr[x][y]  # 해당 네모값중 하나 # 모두 같아야 통과임
        for i in range(x, x + n):
            for j in range(y, y + n):
                if arr[i][j] != init:  # 한번이라도 다르면 그 네모는 압축불가
                    nn = n // 2
                    comp(x, y, nn)
                    comp(x, y + nn, nn)
                    comp(x + nn, y, nn)
                    comp(x + nn, y + nn, nn)
                    return

        # 무사히 다 통과했다면 압축가능
        answer[init] += 1

    comp(0, 0, len(arr))
    return answer


print(solution([[1,1,0,0],[1,0,0,0],[1,0,0,1],[1,1,1,1]]))          # [4,9]
print(solution([[1,1,1,1,1,1,1,1],[0,1,1,1,1,1,1,1],[0,0,0,0,1,1,1,1],[0,1,0,0,1,1,1,1],
                [0,0,0,0,0,0,1,1],[0,0,0,0,0,0,0,1],[0,0,0,0,1,0,0,1],[0,0,0,0,1,1,1,1]]))      # [10,15]

